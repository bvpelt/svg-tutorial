{"version":3,"file":"bundle.js","sources":["../src/transformData.js","../src/index.js"],"sourcesContent":["import {\n  timeParse,\n  stack,\n  extent,\n  stackOffsetWiggle,\n  stackOrderInsideOut,\n} from 'd3';\nimport { blur } from 'array-blur';\n\nconst parseDate = timeParse('%Y-%m-%d');\n\nconst layer = (d) => d.repo;\n\nexport const transformData = (data) => {\n  const layers = Object.keys(data.repositories);\n  const dates = data.dates.map((d) => parseDate(d));\n\n  const dataBylayer = new Map();\n\n  for (let layer of layers) {\n    const layerData = data.repositories[layer];\n\n    // Apply smoothing\n    const smoothedLayerData = blur().radius(12)(layerData);\n\n    dataBylayer.set(layer, smoothedLayerData);\n  }\n\n  const transformedData = [];\n  dates.forEach((date, i) => {\n    const row = { date };\n    for (let layer of layers) {\n      row[layer] = dataBylayer.get(layer)[i];\n    }\n    transformedData.push(row);\n  });\n\n  const stackedData = stack()\n    .offset(stackOffsetWiggle)\n    .order(stackOrderInsideOut)\n    .keys(layers)(transformedData);\n\n  return { dates, stackedData };\n};\n","import {\n  json,\n  scaleTime,\n  extent,\n  max,\n  min,\n  scaleLinear,\n  area,\n  select,\n  scaleOrdinal,\n  hcl,\n  randomNormal,\n  randomLcg,\n  axisTop,\n  axisBottom,\n  ascending,\n} from 'd3';\nimport { areaLabel } from 'd3-area-label';\nimport { transformData } from './transformData';\n\nconst dataURL = './aggregatedData.json';\nconst width = window.innerWidth;\nconst height = window.innerHeight;\n\nconst margin = { top: 20, right: 0, bottom: 20, left: 0 };\nconst ticks = 20;\n\nconst innerWidth = width - margin.left - margin.right;\nconst innerHeight = height - margin.top - margin.bottom;\n\nconst xValue = (d) => d.date;\n\nconst render = ({ dates, stackedData }) => {\n  const xScale = scaleTime().domain(extent(dates)).range([0, innerWidth]);\n\n  const yScale = scaleLinear()\n    .domain([\n      min(stackedData, (d) => min(d, (d) => d[0])),\n      max(stackedData, (d) => max(d, (d) => d[1])),\n    ])\n    .range([innerHeight, 0]);\n\n  const areaGenerator = area()\n    .x((d) => xScale(d.data.date))\n    .y0((d) => yScale(d[0]))\n    .y1((d) => yScale(d[1]));\n\n  const svg = select('body')\n    .append('svg')\n    .attr('width', width)\n    .attr('height', height);\n\n  const g = svg\n    .append('g')\n    .attr('transform', `translate(${margin.left},${margin.top})`);\n\n  const random = randomNormal.source(randomLcg(0.5))(30, 10);\n\n  const colorScale = scaleOrdinal().range(\n    stackedData.map((country, i) => {\n      const t = i / stackedData.length;\n      return hcl(t * 360, 50, random());\n    })\n  );\n\n  g.append('g').call(\n    axisTop(xScale).tickSize(-innerHeight).tickPadding(6).ticks(ticks)\n  );\n  g.append('g')\n    .attr('transform', `translate(0, ${innerHeight})`)\n    .call(axisBottom(xScale).tickSize(0).tickPadding(5).ticks(ticks))\n    .selectAll('line')\n    .remove();\n\n  // Add a black \"envelope\" as a backdrop behind the layers,\n  // so that we don't get undesirable artifacts where the\n  // tick lines are slightly visible in the cracks between layers.\n  stackedData.sort((a, b) => ascending(a.index, b.index));\n  const first = stackedData[0];\n  const last = stackedData[stackedData.length - 1];\n  const outlinePadding = 0.5;\n  const envelope = first.map((d, i) =>\n    Object.assign([d[0] - outlinePadding, last[i][1] + outlinePadding], {\n      data: d.data,\n    })\n  );\n  g.append('path').attr('d', areaGenerator(envelope));\n\n  g.append('g')\n    .selectAll('path')\n    .data(stackedData)\n    .enter()\n    //    .append('a')\n    //    .attr('href', (d) => `https://github.com/stamen/${d.key}`)\n    //    .attr('target', '_blank')\n    .append('path')\n    .attr('class', 'area')\n    .attr('d', areaGenerator)\n    .attr('fill', (d) => colorScale(d.key))\n    .append('title')\n    .text((d) => d.key);\n\n  const labels = g.append('g').selectAll('text').data(stackedData);\n\n  labels\n    .enter()\n    .append('text')\n    .attr('class', 'area-label')\n    .merge(labels)\n    .text((d) => d.key)\n    .attr('transform', areaLabel(areaGenerator));\n};\n\n// Load the data.\njson(dataURL).then((data) => {\n  render(transformData(data));\n});\n"],"names":["parseDate","timeParse","width","window","innerWidth","height","innerHeight","margin","d3","json","then","data","dates","stackedData","xScale","scaleTime","domain","extent","range","yScale","scaleLinear","min","d","max","areaGenerator","area","x","date","y0","y1","g","select","append","attr","random","randomNormal","source","randomLcg","colorScale","scaleOrdinal","map","country","i","t","length","hcl","call","axisTop","tickSize","tickPadding","ticks","axisBottom","selectAll","remove","sort","a","b","ascending","index","first","last","envelope","Object","assign","enter","key","text","labels","merge","areaLabel","render","layers","keys","repositories","dataBylayer","Map","layer","layerData","smoothedLayerData","blur","radius","set","transformedData","forEach","row","get","push","stack","offset","stackOffsetWiggle","order","stackOrderInsideOut","transformData"],"mappings":"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"}